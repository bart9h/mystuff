#!zsh
test -z "$ETC" && export ETC="$HOME/etc"
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
export XDG_STATE_HOME=${XDG_STATE_HOME:-$HOME/.local/state}
export XDG_DATA_HOME=${XDG_DATA_HOME:-$HOME/.local/share}

#{{{1 system-specific

case $(uname -s) in
	Darwin)
		alias ldd='otool -L'
		;;
	OpenBSD)
		sys_less='-c'
		;;
esac

if ls --version >/dev/null 2>/dev/null; then
	sys_ls="--color=always"
	sys_ls_l="-G"
elif which colorls >/dev/null 2>/dev/null; then
	export CLICOLOR_FORCE=1
	alias ls='colorls -G'
fi


#{{{1 load of functions from $ETC/zsh/functions/

fpath=($ETC/zsh/functions $fpath)
autoload "$ETC/zsh/functions/"*


#{{{1 load pre-config local setup

function _load() {
	if [[ -r "$1" ]]; then
		source "$1"
	fi
}

_load "$XDG_CONFIG_HOME/zsh/pre"


#{{{1 shell setup

NEWLINE=$'\n'
test -z "$COLOR" && COLOR='white'

# Setup git/vcs info to add to the prompt bellow.
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' unstagedstr '*'
zstyle ':vcs_info:git:*' stagedstr '+'
zstyle ':vcs_info:git:*' formats '(%b%u%c)'
zstyle ':vcs_info:git:*' actionformats '(%b|%a%u%c)'
autoload -Uz add-zsh-hook vcs_info
setopt prompt_subst
add-zsh-hook precmd vcs_info

# The command prompt.
PS1='%B%F{yellow}%*%f %F{$COLOR}%n@%m%f %F{yellow}%~ %F{red}${vcs_info_msg_0_}%f${NEWLINE}%#%b '
set -o noclobber
set -o inc_append_history
set -o hist_find_no_dups
set -o hist_ignore_space

bindkey -v  # vi command-line editing mode
bindkey -v '^R' 'history-incremental-search-backward'

# press 'v' in vi command mode to open the editor for the current command line
autoload edit-command-line
zle -N edit-command-line
bindkey -M vicmd v 'edit-command-line'

# history options
[[ -d "$XDG_STATE_HOME/zsh" ]] || $mkdir -p "$XDG_STATE_HOME/zsh"
HISTFILE="$XDG_STATE_HOME/zsh/history"
HISTSIZE=8000
SAVEHIST=6000
setopt extended_history          # add timestamp and duration to history file
setopt hist_expire_dups_first    # trim dups before uniques
setopt hist_ignore_dups          # don't add line to history if equal to previous line
setopt hist_ignore_space         # remove lines that start with a space
setopt hist_verify               # edit expanded line before executing
setopt inc_append_history_time   # append lines to history as soon as they are entered

setopt interactive_comments      # enable '#' comments on the interactive shell


#{{{1 software setup

export EDITOR='vim'
export PAGER='less'
export LESS="-X -F -M -R -f -J -W -j4 $sys_less"

alias ag='ag --pager less'
alias cp='cp -i'
alias duf='duf -hide-fs tmpfs,devtmpfs'
alias feh='feh --quiet --scale-down'
alias history='fc -l 1 -1'
alias lsblk='lsblk -o SIZE,LABEL,NAME,MOUNTPOINT,FSTYPE,UUID'
alias tig='tig --all'


#{{{1 ls related aliases and functions

function a() {
    local n=$( ls "$@" | wc -l )
	if test $n -gt 0; then
		if test $n -lt $(( $LINES / 2 )); then
			ls $sys_ls -1F "$@"
		else
			ls $sys_ls -F "$@"
		fi
	fi
}

alias d="ls -lhF $sys_ls $sys_ls_l"
alias z='d -rt'


#{{{1 aliases and functions that mask existing programs

function mv() {
	local target="${!#}"
	if [[ "$target" =~ /$ ]]; then
		test -d "$target" || mkdir -v -p "$target"
	fi
	command mv -i "$@"
}

function df() {
	if test -z "$1"; then
		command df -h .
	else
		command df "$@"
	fi
}

function du() {
	if test -z "$1"; then
		command du -shc *
	else
		command du "$@"
	fi
}

function cal() {
	if test -z "$1"; then
		command cal -3
	else
		command cal "$@"
	fi
}

function bc() {
	if test -z "$1"; then
		command bc -lq
	else
		echo "$@" | command bc -lq
	fi
}

#{{{1 other aliases and functions

function mkcd() { mkdir -p "$1" && cd "$1"; }
function cd..() {
	local dir="$PWD"
	cd .. || return
	rmdir "$dir" 2>/dev/null
	test -d "$dir" &&
	ls -F "$dir" &&
	read "?rm -rf \"$dir\" (y/[n])? " &&
	test "$REPLY" = "y" &&
	rm -rfv "$dir"
}

function g() {
	if test -z "$1"; then
		sed -n -e '/^\[alias/,/\[/p' "$XDG_CONFIG_HOME/git/config" | grep -v '^\['
	else
		git "$@"
	fi
}

function mk()
{
	if test -f build.ninja; then
		nice ninja "$@"
	elif test -f Cargo.toml; then
		nice cargo build "$@"
	else
		nice make -j $(( `show cpus` + 1 )) "$@"
	fi
}
alias rmk='make clean && mk'

alias Con="( files=\"\$(git status --porcelain | grep '^UU' | cut -d ' ' -f 2-)\" && if test -n \"\$files\"; then cd \"\$(git rev-parse --show-toplevel)\" && vim -o \$files +'set nofoldenable' +/'^\(=======$\|<<<<<<< \|>>>>>>> \)'; else echo 'No conflict.'; fi )"

alias dif="$ETC/scripts/dif.sh"
alias vimv="$ETC/scripts/vimv.sh"

alias l='less'
alias data='date +%Y-%m-%d'
alias gk='gitk --all &'


#{{{1 load post-config local setup

_load "$XDG_CONFIG_HOME/zsh/post"

#{{{1 vim600:foldmethod=marker:
