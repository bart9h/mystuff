#!/bin/sh

#stty onlcr 0>&1

echo '# ~/.xinitrc'

{ # environment variables

	echo $PATH | grep -q $HOME/bin || export PATH=$HOME/bin:$PATH
	export SDL_AUDIODRIVER='alsa'
	export GTK_IM_MODULE='cedilla'
}

~/src/bash/Xdefaults.sh

#xhost localhost
#aumix -L

{ # failsafe mode

	if false; then
		xterm &
		if ( which fluxbox >/dev/null ); then
			exec fluxbox
		else
			exec twm
		fi
	fi
}

{ # mouse

	# mouse accel and it's movement threshold
	xset m 2 32

	# on logitec lx700, use thumb button (button 8) to paste (button 2)
	#xmodmap -e "pointer = 1 8 3 4 5 6 7 2 9"
}

{ # keyboard

	# kb repeat delay and rate
	xset r rate 224 30

	#setxkbmap -variant intl

	xmodmap -e 'remove Lock = Caps_Lock' -e 'keysym Caps_Lock = Escape'
	#xmodmap -e 'remove Lock = Caps_Lock' -e 'keysym Caps_Lock = Control'
}

{ # dpms

	xset -dpms
	xset s expose
	xset s blank

	xset s 300  # seconds to blank
	xset dpms 1200 2400 3600  # seconds to standby, suspend, and off
	#hint:  600=10min 900=15m 1200=20m 1800=30m
}

# { host-specific

xinitrc_bia()
{
	export PRINTER='HP-C3180'

	if test $( expr match "$DISPLAY" '.*:0' ) -gt 0; then
		echo '# startup programs'
		#( sleep 3s; exec tilda )&
		if true; then # landscape
			#( while sleep 1s; do gkrellm -w; done )&
			xtoolwait gkrellm -w
		else
			rotation=$( cat $HOME/var/xrandr-rotation )
			test -n "$rotation" || rotation="normal"
			xrandr -o "$rotation"
			xtoolwait wmhdplop -t -d /dev/sda
			xtoolwait wmcalclock -24 -tc gray
			xtoolwait wmget dock --output /home/incoming/wmget
			xtoolwait wmtop
			xtoolwait wmnd -M
			xtoolwait wmmoonclock -lat -43 -lon -23
			xtoolwait wmxmms2
			xtoolwait wmfsm --noblink
			xtoolwait wmbubble
		fi
		xtoolwait wmdrawer
	fi
}

xinitrc_doti()
{
	xcompmgr -c &
	gkrellm -w &
	wmtop -c "xterm -geometry 90x24 -e htop" &
	pidgin --nologin &
}

case $( hostname ) in
	bia-desk*)
		xinitrc_bia
	;;

	doti-desk*)
		xinitrc_doti
	;;
esac

#}

#{ network programs

	start_mldonkey()
	{
		if false; then
			if which dk; then
				if pidof mlnet; then
					osd 'mlnet already running'
				else
					delay='1m'
					[ $delay != 0 ] && osd "starting mldonkey in $delay" &
					(
						if sleep $delay; then
							dk start
						fi
					) &
				fi
			else
				osd 'nao achei o mlnet'
			fi
		else
			osd 'mlnet desligado'
		fi
	}

	start_rtorrent()
	{
		torrent_dir=/home/media/torrent
		if which rtorrent; then
			if pidof rtorrent; then
				osd 'rtorrent already running'
			else
				delay='0m 40s'
				test $delay != 0 && osd "starting rtorrent in $delay" &
				(
					if sleep $delay; then
						cd $torrent_dir || exit
						exec screen -S tor rtorrent
					fi
				) &
			fi
		else
			osd 'nao achei o rtorrent'
		fi
	}

	if true || ping -q -n 1 google.com 2>/dev/null; then
		#start_mldonkey
		start_rtorrent
	fi

#}

#screen -wipe | grep -q 'sex\.backup' || \
#sex -n batch_backup '/home/barrett/bin/batch_backup'

( #{ desktop background
	if sleep 1s; then
		dir="$HOME/share/wallpaper/random"
		file="`find "$dir" -not -type d|rl|head -1`"
		if !  fbsetbg "$file"; then
			if ! fbsetbg -l; then
				xsetroot -solid black
			fi
		fi
	fi
) & #}

if ! pidof xmms2d; then
	( sleep 6s && exec xmms2d ) &
fi

{ # window manager

	echo '# window manager'
	wm='fluxbox -screen 0'
	while test "$wm" != "exit"; do
		echo "running($wm)"
		$wm
		wm=` \
			Xdialog --stdout --inputbox \
				"$wm terminated. What should I run now?" \
				40 120 \
		`
		echo "new($wm)"
		if test "$wm" == "" -o "$wm" == "exit"; then
			break
		fi
	done
}

true


# vim600:fdm=marker:foldmarker={,}
