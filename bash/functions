#!/bin/bash
# vim600:ft=sh:fdm=marker:fmr={,}:

function log()
{
	echo "`date`: $*" \
	>> "/tmp/`basename "$0"`.log"
}

function add_to_path()
{
	local end='tail'
	while test -n "$1"; do
		case "$1" in
			-t)
				end='tail'
			;;
			-h)
				end='head'
			;;
			*)
				if
					! expr match "$PATH"    "$1:"  >/dev/null &&
					! expr match "$PATH" ".*:$1:"  >/dev/null &&
					! expr match "$PATH" ".*:$1$"  >/dev/null
				then
					if test "$end" == 'tail'; then
						export PATH="$PATH:$1"
					else
						export PATH="$1:$PATH"
					fi
				fi
			;;
		esac
		shift
	done
}

function eset()
{
	tmp="/tmp/eset.$USER.sh"
	if test -s "$tmp"; then
		rm "$tmp" || return
	fi

	for i in "$@"; do
		echo "export $i=${!i}" >> "$tmp"
	done
	$EDITOR "$tmp" && source "$tmp"
}

function call()
{
	local f="$1"; shift
	local t="$(type -t "$f" 2>/dev/null)"

	if test "$t" == "alias"; then
		local a="$( alias "$f" | cut -d "'" -f 2 )"
		if test "$a" == "call $f"; then
			unalias "$f"
			t="$( type -t "$f" 2>/dev/null )"
		fi
	fi

	if test "$t" != "function"; then
		local s="$HOME/etc/bash/$f.sh"
		if test -r "$s"; then
			source "$s"
		fi
	fi

	"$f" "$@"
}

function start_screen()
{
	if test "$1" == "-S"; then
		name="$2"
		shift 2
	else
		name="`basename "$1"`"
	fi

	test "$1" || { echo 'what?'; exit; }
	test -x "$1" || test -x "`which $1`" || { echo "no $1"; exit; }

	tmp=`mktemp "/tmp/sex.$name.XXXXXX"`

	cat <<EOF >| "$tmp"
#!/bin/bash
echo -- "> $@"
if $@ ; then
	echo "> true"
else
	echo -- "> \"$name\" terminated with exitcode $?"
	echo -n "> press enter to close"
	read
fi
rm "\$0"
EOF

	chmod +x "$tmp"
	screen -D -m -S "$name" "$tmp" &
}

function show()
{
	case "$1" in
	ansi|colors)
		for b in 0 1; do
			for j in 3 4; do
				i=0
				while test $i -le 7; do
					echo -ne "\e[${b};${j}${i}m [$b;$j$i] "
					let i=i+1
				done
				echo -e "\e[0;0m"
			done
		done
	;;
	processors|cpus)
		cat /proc/cpuinfo | grep '^processor\>' | wc -l
	;;
	resolution|res|rez)
		echo $(xwininfo -root|grep Width:|cut -d : -f 2)x$(xwininfo -root|grep Height:|cut -d : -f 2|sed s/\ //g)
	;;
	sizeof)
		shift
		test -z "$1" && echo "sizeof what?" && return
		local arg
		while true; do
			case "$1" in
			-*)
				arg="$arg $1"
				shift
				;;
			*)
				break
				;;
			esac
		done
		echo -e "#include <stdio.h>\n#include <time.h>\nint main() { printf(\"%d\\\n\", sizeof($*)); return 0; }" | crun $arg
	;;
	*)
		echo "things to show: colors, cpus, resolution, sizeof"
	;;
	esac
}

