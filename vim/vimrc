"{{{1 Vundle plugin manager

set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle
call vundle#begin()

Plugin 'gmarik/vundle'

Plugin 'a.vim'                      " Jump to alternate (.h) file and back.
Plugin 'bfrg/vim-cpp-modern'        " Better C++ syntax highlighting.
Plugin 'tpope/vim-fugitive'         " Git integration.
Plugin 'airblade/vim-gitgutter'     " Quick per-line git diff status on the left gutter.
Plugin 'gruvbox-community/gruvbox'  " A colorscheme.
Plugin 'junegunn/gv.vim'            " Browse git history.
Plugin 'HiPhish/info.vim'           " Browse GNU Info articles.
Plugin 'netrw.vim'                  " File browser.

Plugin 'tpope/vim-eunuch'
" Interface to shell commands:
"    :Delete    delete file and buffer
"    :Unlink    delete file, but keep empty buffer (undo is possible)
"    :Move      rename file and buffer
"    :Rename    :Move relative to file's basedir
" plus Mkdir, Cfind, Clocate, SudoWrite, and more.

Plugin 'tpope/vim-obsession'
" :Obsession  or  :Obsession <session-name> to start recording.

Plugin 'tpope/vim-vinegar'
" Enhances netrw:
" -       to go up
" ~       home
" gh      toggle hidden,
" . or !  run :command file or :!command file
" y.      copy full path

Plugin 'tpope/vim-flagship'
" Nicer statusline and tabline.

call vundle#end()


"{{{1  behaviour

unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim
set noincsearch
set mouse=
unlet c_comment_strings

set nobackup
set noswapfile

set hidden
set switchbuf=useopen

set wildmode=list:longest,full
set nostartofline
set modeline
set modelines=3


"{{{1 tab

set tabstop=4
set shiftwidth=4
set nosmarttab
set softtabstop=0


"{{{1 visual

syntax on
set hlsearch
set winminheight=0
set laststatus=2

let loaded_matchparen=1   " don't highlight matching ()[]{}s
let perl_extended_vars=1  " highlight perl $extended->{variables}
let perl_fold=1

highlight RedundantSpaces ctermbg=red guibg=red
match RedundantSpaces /\s\+$\| \+\ze\t/

try
	let g:gruvbox_contrast_dark = 'medium'
	let g:gruvbox_contrast_light = 'hard'
	colorscheme gruvbox
catch /^Vim\%((\a\+)\)\=:E185/
	colorscheme my-elflord
endtry

set background=dark

if has("gui_running")
	set novisualbell
	set number
	set guioptions -=T
	set guifont=Inconsolata\ 12
	hi CursorLine guibg=#0000b0 guifg=white
else
	set t_Co=256
	hi! link Operator GruvboxYellow
	hi Cursor ctermbg=yellow ctermfg=black
endif


"{{{1  key mappings

" swap ' and ` (makes ' go to exact position)
noremap ' `
noremap ` '

"disable ex mode
nnoremap Q <nop>

" <c-l> also clear search highlight, refresh git gutter
nnoremap <C-L> :nohlsearch<CR>:GitGutter<CR><C-L>

" toggle spell cheching
nmap <F8> :set spelllang=en spell!<CR>

" quick macro replay
nmap <F9> @q

" makes * highlight the word, but don't jump to next occurrence
"map <silent> * yiw:let @/="\\<".@0."\\>"<CR>:set hls<CR>

" makes * go back to current word
map <silent> * *N

" diff selections
vmap <f1> "ay
vmap <f2> "by:tabnew<CR>"bP:diffthis<CR>:set buftype=nofile<CR>:vnew<CR>"aP:set buftype=nofile<CR>:diffthis<CR>

" resize window
nmap <C-kPlus> <C-W>+
nmap <C-kMinus> <C-W>-


"{{{1  <leader> key mappings

map <space> <leader>

nmap <leader>V :split $MYVIMRC<CR>
nmap <leader>S :source $MYVIMRC<CR>

" navitage through compiler errors
nmap <leader>n :cnext<CR>
nmap <leader>p :cprevious<CR>

" close/open folders
"nmap <leader><space> za

" switch buffers
nmap <leader>b :b<space><C-D>
nmap <leader><space> :b#<CR>

" cycle through tabs
nmap <leader><tab> :tabnext<CR>

" search for current word on all source files (<l>ocal and <g>lobal)
"nmap <leader>l  :vimgrep /\<<cword>\>/gj `for i in *; do file $i | grep -q text && echo "\"$i\""; done`
nmap <leader>l :AgFileDir <cword><CR>
nmap <leader>g :GrepGit <cword><CR>

" make
nmap <leader>m :wall<CR>:make<CR>

nmap <leader>a :A<CR>
nmap <leader>e :Explore<CR>
nmap <leader>s :split<CR>
nmap <leader>v :vsplit<CR>

" man
nmap <leader>M :Man <C-R><C-W><CR>

" quit
nmap <leader>q :q<CR><C-W>_
nmap <leader>Q :mksession!<CR>:wqa<CR>
nmap <leader>ww :w<CR>
nmap <leader>wa :wa<CR>
nmap <leader>wq :wq<CR><C-W>_

" rotate windows
nmap <leader>k <C-W>r<C-W>k<C-w>_
nmap <leader>j <C-W>j<C-W>R<C-w>_
nmap <leader>- <C-W>_
nmap <leader>= <C-W>=


"{{{1 filetype

autocmd! FileType arduino  FileTypeCode
autocmd! FileType c        FileTypeCode
autocmd! FileType cpp      FileTypeCode
autocmd! FileType sh       FileTypeCode
autocmd! FileType vim      FileTypeCode
command! FileTypeCode setlocal number | set cindent

autocmd! FileType rust FileTypeRust
command! FileTypeRust setlocal number | set cindent | set noexpandtab

autocmd! FileType perl FileTypePerl
command! FileTypePerl setlocal number
\	| set iskeyword-=:
\	| setlocal cindent
\	| setlocal keywordprg=perldoc\ -f
\	| setlocal makeprg=perl\ -c\ %
\	| setlocal errorformat=
\%-G%.%#had\ compilation\ errors.,
\%-G%.%#syntax\ OK,
\%m\ at\ %f\ line\ %l.,
\%+A%.%#\ at\ %f\ line\ %l\\,%.%#,
\%+C%.%#


"{{{1 commands

command! -bar -nargs=1 AgFileDir
\   !cd "`dirname "%:p"`"; pwd; ag -s --color "\b<args>\b" 2> /dev/null \| less -F; true

command! -nargs=1 GrepGit
\   vimgrep <args> `git ls-files "$(git rev-parse --show-toplevel)"`

command! Conflict /^\(=======$\|<<<<<<< \|>>>>>>> \)/

command! -bar -nargs=1 DoMan %!/usr/bin/man -a -S 3:2:1:5:8:4:7:6:9 -P cat <args>
command! -bar -nargs=1 Man
\   new
\|  DoMan <args>
\|  set filetype=man
\|  set buftype=nofile
\|  set foldmethod=indent
\|  set foldnestmax=1
\|  goto 1
\|  %s/.//g

command! AcentoToUtf
\  't,'Ts/\~a/ã/ge  |  't,'Ts/\~A/Ã/ge
\| 't,'Ts/\~o/õ/ge  |  't,'Ts/\~O/Õ/ge
\| 't,'Ts/\~n/ñ/ge  |  't,'Ts/\~N/Ñ/ge
\| 't,'Ts/\`a/à/ge  |  't,'Ts/\`A/À/ge
\| 't,'Ts/\^a/â/ge  |  't,'Ts/\^A/Â/ge
\| 't,'Ts/\^e/ê/ge  |  't,'Ts/\^E/Ê/ge
\| 't,'Ts/\^o/ô/ge  |  't,'Ts/\^O/Ô/ge
\| 't,'Ts/\'a/á/ge  |  't,'Ts/\'A/Á/ge
\| 't,'Ts/\'e/é/ge  |  't,'Ts/\'E/É/ge
\| 't,'Ts/\'i/í/ge  |  't,'Ts/\'I/Í/ge
\| 't,'Ts/\'o/ó/ge  |  't,'Ts/\'O/Ó/ge
\| 't,'Ts/\'u/ú/ge  |  't,'Ts/\'U/Ú/ge
\| 't,'Ts/\'c/ç/ge  |  't,'Ts/\'C/Ç/ge


"{{1 load local settings

if filereadable($HOME . "/.vim/vimrc.local")
	source ~/.vim/vimrc.local
endif


"}}}
" vim600:fdm=marker:fmr={{{,}}}:
