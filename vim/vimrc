"{{{1 Vundle

set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

" My Bundles here:
Bundle 'tpope/vim-fugitive'
Bundle 'gregsexton/gitv'
Bundle 'netrw.vim'
Bundle 'bufexplorer.zip'
Bundle 'a.vim'

" original repos on github
" Bundle 'tpope/vim-fugitive'
" Bundle 'Lokaltog/vim-easymotion'
" Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
" Bundle 'tpope/vim-rails.git'
" vim-scripts repos
" Bundle 'L9'
" Bundle 'FuzzyFinder'
" non github repos
" Bundle 'git://git.wincent.com/command-t.git'
" ...

" Makes Gitv diff start unfolded
augroup git
	au!
	autocmd FileType git :setlocal foldlevel=99
augroup END

filetype plugin indent on     " required!
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..


"{{{1  behaviour

set nobackup
set noswapfile

set hidden
set switchbuf=usetab

set wildmenu
set wildmode=list:longest,full
set nostartofline


"{{{1 tab

set tabstop=4
set shiftwidth=4
set nosmarttab
set softtabstop=0


"{{{1 visual

syntax on
set ruler
set showcmd
set hlsearch
set winminheight=0
set scrolloff=4
set laststatus=2

let loaded_matchparen=1   " don't highlight matching ()[]{}s
let perl_extended_vars=1  " highlight perl $extended->{variables}

highlight RedundantSpaces ctermbg=red guibg=red
match RedundantSpaces /\s\+$\| \+\ze\t/

if has("gui_running")
	set novisualbell
	set guioptions -=T
	set guifont=Inconsolata\ 12
	colorscheme darkblue
	hi CursorLine guibg=#0000b0 guifg=white
else
	set background=dark
	hi Cursor ctermbg=yellow ctermfg=black
	colorscheme my-elflord
endif


"{{{1  key mappings

" swap ' and ` (makes ' go to exact position)
noremap ' `
noremap ` '

"disable ex mode
nnoremap Q <nop>

" <c-l> also clear search highlight
nnoremap <C-L> :nohlsearch<CR><C-L>

" cycle through tabs
nmap <tab> :tabnext<CR>

" toggle spell cheching
nmap <F8> :set spelllang=en spell!<CR>

" quick macro
nmap <F9> @q

" makes * highlight the word, but don't jump to next occurrence
"map <silent> * yiw:let @/="\\<".@0."\\>"<CR>:set hls<CR>
" makes * stay on current word
map <silent> * *N

" rotate windows
nmap <C-k> <C-W>r<C-W>k<C-w>_
nmap <C-j> <C-W>j<C-W>R<C-w>_
imap <C-k> <ESC><C-k>
imap <C-j> <ESC><C-j>

" resize window
nmap <C-kPlus> <C-W>+
nmap <C-kMinus> <C-W>-
nmap <+> <C-W>+
nmap <-> <C-W>-

" diff selections
vmap <f1> "ay
vmap <f2> "by:tabnew<CR>"bP:diffthis<CR>:set buftype=nofile<CR>:vnew<CR>"aP:set buftype=nofile<CR>:diffthis<CR>

" close/open folders
nmap <space> za

" quit
nmap <c-x> :q<CR>

" search for current word on all source files
nmap <c-c> :!cd "`dirname "%:p"`"; grep -n "\<<cword>\>" *.[cChd] *.cpp *.cxx *.pl *.pm *.java *.pc *.f 2> /dev/null; true<CR>

" make
nmap <c-n> :wall<CR>:make<CR>

" man
nmap <K> :Man <C-R><C-W><CR>

" navitage through compiler errors
nmap <,> :cnext<CR>


"{{{1 filetype

autocmd! FileType perl FileTypePerl
command! FileTypePerl setlocal makeprg=perl\ -c\ %
\	| setlocal keywordprg=perldoc\ -f
\	| setlocal cindent
\	| setlocal number
\	| setlocal errorformat=
\%-G%.%#had\ compilation\ errors.,
\%-G%.%#syntax\ OK,
\%m\ at\ %f\ line\ %l.,
\%+A%.%#\ at\ %f\ line\ %l\\,%.%#,
\%+C%.%#


"{{{1 commands

command! Conflict /^\(=======$\|<<<<<<< \|>>>>>>> \)/

command! -bar -nargs=1 DoMan %!/usr/bin/man -a -S 3:2:1:5:8:4:7:6:9 -P cat <args>
command! -bar -nargs=1 Man
\   new
\|  DoMan <args>
\|  set filetype=man
\|  set buftype=nofile
\|  set foldmethod=indent
\|  goto 1
\|  %s/.//g


"{{1 load local settings

if filereadable($HOME . "/.vimrc_local")
	source ~/.vimrc_local
endif


"}}}
" vim600:fdm=marker:fmr={{{,}}}:
